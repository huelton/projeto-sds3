{"ast":null,"code":"var _jsxFileName = \"/home/huelton/Documents/workspace/ws-devsuperior/projeto-sds3/frontend/src/components/barchart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../utils/request\";\nimport { round } from \"../../utils/format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"% Sucesso\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/success-by-seller`).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.sellerName);\n      const mySeries = data.map(x => round(100.0 * x.deals / x.visited, 1));\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \"% Sucesso\",\n          data: mySeries\n        }]\n      });\n    });\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  };\n  const mockData = {\n    labels: {\n      categories: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n    },\n    series: [{\n      name: \"% Sucesso\",\n      data: [43.6, 67.1, 67.7, 45.6, 71.1]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      xaxis: chartData.labels\n    },\n    series: chartData.series,\n    type: \"bar\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n\n_s(BarChart, \"L5R8pL5o1jlypan2appU14KtARc=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["/home/huelton/Documents/workspace/ws-devsuperior/projeto-sds3/frontend/src/components/barchart/index.tsx"],"names":["React","useState","useEffect","Chart","axios","BASE_URL","round","BarChart","chartData","setChartData","labels","categories","series","name","data","get","then","response","myLabels","map","x","sellerName","mySeries","deals","visited","options","plotOptions","bar","horizontal","mockData","xaxis"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,oBAAtB;;;AAeA,MAAOC,QAAQ,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAY;AAClDS,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE;AADR,KAD0C;AAIlDC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,WADV;AAEIC,MAAAA,IAAI,EAAE;AAFV,KADI;AAJ0C,GAAZ,CAA1C;AAaAZ,EAAAA,SAAS,CAAE,MAAM;AACbE,IAAAA,KAAK,CAACW,GAAN,CAAW,GAAEV,QAAS,0BAAtB,EACCW,IADD,CACOC,QAAQ,IAAI;AACZ,YAAMH,IAAI,GAAGG,QAAQ,CAACH,IAAtB;AACA,YAAMI,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGR,IAAI,CAACK,GAAL,CAASC,CAAC,IAAId,KAAK,CAAC,QAASc,CAAC,CAACG,KAAX,GAAkBH,CAAC,CAACI,OAArB,EAA6B,CAA7B,CAAnB,CAAjB;AAEAf,MAAAA,YAAY,CAAC;AACZC,QAAAA,MAAM,EAAE;AACJC,UAAAA,UAAU,EAAEO;AADR,SADI;AAIZN,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,IAAI,EAAE,WADV;AAEIC,UAAAA,IAAI,EAAEQ;AAFV,SADI;AAJI,OAAD,CAAZ;AAWN,KAjBD;AAmBH,GApBQ,EAoBN,EApBM,CAAT;AAuBA,QAAMG,OAAO,GAAG;AACZC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE;AACDC,QAAAA,UAAU,EAAE;AADX;AADI;AADD,GAAhB;AAQA,QAAMC,QAAQ,GAAG;AACbnB,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,aAAX,EAA0B,QAA1B,EAAoC,OAApC,EAA6C,OAA7C;AADR,KADK;AAIbC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,IAAI,EAAE,WADV;AAEIC,MAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB;AAFV,KADI;AAJK,GAAjB;AAYF,sBACI,QAAC,KAAD;AACK,IAAA,OAAO,EAAG,EAAE,GAAGW,OAAL;AAAcK,MAAAA,KAAK,EAAEtB,SAAS,CAACE;AAA/B,KADf;AAEK,IAAA,MAAM,EAAGF,SAAS,CAACI,MAFxB;AAGK,IAAA,IAAI,EAAC,KAHV;AAIK,IAAA,MAAM,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CAlED;;GAAOL,Q;;KAAAA,Q;AAoEP,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chart from \"react-apexcharts\"\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../utils/request\";\nimport { round } from \"../../utils/format\";\nimport { SaleSuccess } from \"../../types/sale\";\n\ntype SeriesData = {\n    name: string;\n    data: number[];\n}\n\ntype ChartData = {\n    labels: {\n        categories: string[];\n    };\n    series: SeriesData[];\n}\n\nconst  BarChart = () => {\n\n    const [chartData, setChartData] = useState<ChartData>({\n        labels: {\n            categories: []\n        },\n        series: [\n            {\n                name: \"% Sucesso\",\n                data: []                   \n            }\n        ]\n    });\n\n\n    useEffect( () => {\n        axios.get(`${BASE_URL}/sales/success-by-seller`)\n        .then( response => {\n               const data = response.data as SaleSuccess[];\n               const myLabels = data.map(x => x.sellerName);\n               const mySeries = data.map(x => round(100.0 *  x.deals /x.visited,1));\n\n               setChartData({\n                labels: {\n                    categories: myLabels\n                },\n                series: [\n                    {\n                        name: \"% Sucesso\",\n                        data: mySeries                   \n                    }\n                ]\n            });\n        });\n\n    }, [])\n    \n\n    const options = {\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            }\n        },\n    };\n    \n    const mockData = {\n        labels: {\n            categories: ['Anakin', 'Barry Allen', 'Kal-El', 'Logan', 'Padmé']\n        },\n        series: [\n            {\n                name: \"% Sucesso\",\n                data: [43.6, 67.1, 67.7, 45.6, 71.1]                   \n            }\n        ]\n    };\n\n  return (\n      <Chart \n           options={ { ...options, xaxis: chartData.labels } }\n           series={ chartData.series}\n           type=\"bar\"\n           height=\"240\"\n      />\n  );\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}